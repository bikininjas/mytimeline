steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', '$_ARTIFACT_REGISTRY/$PROJECT_ID/timeline-app/timeline-app:$COMMIT_SHA',
      '-t', '$_ARTIFACT_REGISTRY/$PROJECT_ID/timeline-app/timeline-app:latest',
      '.'
    ]

  # Push the container image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push',
      '--all-tags',
      '$_ARTIFACT_REGISTRY/$PROJECT_ID/timeline-app/timeline-app'
    ]

  # Deploy container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: [
      'run', 'deploy', '$_SERVICE_NAME',
      '--image', '$_ARTIFACT_REGISTRY/$PROJECT_ID/timeline-app/timeline-app:$COMMIT_SHA',
      '--region', '$_REGION',
      '--platform', 'managed',
      '--allow-unauthenticated',
      '--port', '3000',
      '--memory', '512Mi',
      '--cpu', '1',
      '--max-instances', '10',
      '--min-instances', '0',
      '--timeout', '300',
      '--set-env-vars', 'NODE_ENV=development,PORT=3000',
      '--set-secrets', 'SQLITE_URL=SQLITE_URL:latest',
      '--tag', 'dev'
    ]

# Substitutions for Cloud Build variables
substitutions:
  _ARTIFACT_REGISTRY: 'us-central1-docker.pkg.dev'
  _REGION: 'us-central1'
  _SERVICE_NAME: 'timeline-app'

# Build configuration
options:
  # Use high-performance machine type
  machineType: 'E2_HIGHCPU_8'
  # Enable Docker layer caching
  logging: CLOUD_LOGGING_ONLY
  
# Timeout for the entire build
timeout: 1200s

# Images to be pushed to registry
images:
  - '$_ARTIFACT_REGISTRY/$PROJECT_ID/timeline-app/timeline-app:$COMMIT_SHA'
  - '$_ARTIFACT_REGISTRY/$PROJECT_ID/timeline-app/timeline-app:latest'
