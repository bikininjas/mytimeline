version: '3.8'

services:
  # Timeline App Service
  timeline-app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: timeline-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - SQLITE_URL=${SQLITE_URL}
    volumes:
      # Mount logs directory for persistent logging
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/data"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - timeline-network

  # Development service (alternative to production)
  timeline-app-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: deps-dev
    container_name: timeline-app-dev
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - SQLITE_URL=${SQLITE_URL}
    volumes:
      # Mount source code for hot reloading in development
      - .:/app
      - /app/node_modules
      - ./logs:/app/logs
    command: ["bun", "--watch", "server.js"]
    restart: unless-stopped
    networks:
      - timeline-network
    profiles:
      - dev

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: timeline-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - timeline-app
    restart: unless-stopped
    networks:
      - timeline-network
    profiles:
      - production

  # Monitoring with simple health checker
  healthcheck:
    image: curlimages/curl:latest
    container_name: timeline-healthcheck
    command: >
      sh -c "
        while true; do
          curl -f http://timeline-app:3000/api/data > /dev/null 2>&1
          if [ $$? -eq 0 ]; then
            echo '$(date): Health check passed'
          else
            echo '$(date): Health check failed'
          fi
          sleep 60
        done
      "
    depends_on:
      - timeline-app
    restart: unless-stopped
    networks:
      - timeline-network
    profiles:
      - monitoring

networks:
  timeline-network:
    driver: bridge

volumes:
  logs:
    driver: local
